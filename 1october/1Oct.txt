<?xml version="1.0" encoding="UTF-8"?>
<!ELEMENT Student (rollNo,sName,sAge,sCourse) >
<!ELEMENT rollNo (#PCDATA)>
<!ELEMENT sName (#PCDATA)>
<!ELEMENT sAge (#PCDATA)>
<!ELEMENT sCourse (#PCDATA)> 


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Student SYSTEM "Student.dtd" >
<Student>
<rollNo>1001</rollNo>
<sName>Alex</sName>
<sAge>19</sAge>
<sCourse>B. Tech</sCourse>
</Student> 


<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" 
targetNamespace="http://www.example.org/Student" 
xmlns:tns="http://www.example.org/Student" elementFormDefault="qualified">
<element name="Student">
<complexType>
<sequence>
<element name="rollNo" type="int"/>
<element name="sName" type="string"/>
<element name="sAge" type="int"/>
<element name="sCourse" type="string"/>
</sequence>
</complexType>
</element>
</schema> 


package com.io;

import java.io.File;
import java.io.IOException;

import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.dom.DOMSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;

import org.w3c.dom.Document;
import org.xml.sax.SAXException;

public class ValidateStudentData {

	public static void main(String[] args) throws SAXException, ParserConfigurationException, IOException {
		String uri = XMLConstants.W3C_XML_SCHEMA_NS_URI;
		SchemaFactory factory= SchemaFactory.newInstance(uri);

		Schema schema = factory.newSchema(new File("D:\\FileIO\\Student.xsd"));
		Validator validator = schema.newValidator();
		File file = new File("D:\\FileIO\\Student.xml");

		DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();
		DocumentBuilder builder = builderFactory.newDocumentBuilder();
		Document document = builder.parse(file);
		DOMSource domSource = new DOMSource(document);

		validator.validate(domSource);	
	}
} 